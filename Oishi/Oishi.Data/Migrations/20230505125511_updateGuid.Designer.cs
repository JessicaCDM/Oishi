// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oishi.Data.Contexts;

#nullable disable

namespace Oishi.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230505125511_updateGuid")]
    partial class updateGuid
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Oishi.Data.Models.Advertisement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AdvertisementStatus")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MunicipalityOrCityId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(7,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("SubcategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("UserAccountId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MunicipalityOrCityId");

                    b.HasIndex("SubcategoryId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("Advertisements");
                });

            modelBuilder.Entity("Oishi.Data.Models.AdvertisementHighlight", b =>
                {
                    b.Property<int>("HighLightTypeId")
                        .HasColumnType("int");

                    b.Property<int>("AdvertisementId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(4,2)");

                    b.Property<decimal>("AmountTax")
                        .HasColumnType("decimal(4,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("HighLightTypeId", "AdvertisementId");

                    b.HasIndex("AdvertisementId");

                    b.ToTable("AdvertisementHighlights");
                });

            modelBuilder.Entity("Oishi.Data.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Oishi.Data.Models.ExternalProvider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("EndpointUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.HasKey("Id");

                    b.ToTable("ExternalProviders");
                });

            modelBuilder.Entity("Oishi.Data.Models.Favorite", b =>
                {
                    b.Property<int>("UserAccountId")
                        .HasColumnType("int");

                    b.Property<int>("AdvertisementId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("UserAccountId", "AdvertisementId");

                    b.HasIndex("AdvertisementId");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("Oishi.Data.Models.HighlightType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<byte>("Days")
                        .HasColumnType("tinyint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(4,2)");

                    b.HasKey("Id");

                    b.ToTable("HighlightTypes");
                });

            modelBuilder.Entity("Oishi.Data.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AdvertisementId")
                        .HasColumnType("int");

                    b.Property<string>("SourceImage")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("AdvertisementId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Oishi.Data.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AdvertisementId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReceiverUserAccountId")
                        .HasColumnType("int");

                    b.Property<int>("SenderUserAccountId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdvertisementId");

                    b.HasIndex("ReceiverUserAccountId");

                    b.HasIndex("SenderUserAccountId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Oishi.Data.Models.MunicipalityOrCity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(56)
                        .HasColumnType("nvarchar(56)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegionId");

                    b.ToTable("MunicipalityOrCities");
                });

            modelBuilder.Entity("Oishi.Data.Models.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("Id");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("Oishi.Data.Models.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.HasKey("Id");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("Oishi.Data.Models.Subcategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Subcategories");
                });

            modelBuilder.Entity("Oishi.Data.Models.UserAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("SourceImage")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("UserAccountStatus")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("Oishi.Data.Models.UserExternalLogin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ExternalProviderId")
                        .HasColumnType("int");

                    b.Property<int>("UserAccountId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExternalProviderId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("UserExternalLogins");
                });

            modelBuilder.Entity("Oishi.Data.Models.UserInternalLogin", b =>
                {
                    b.Property<int>("UserAccountId")
                        .HasColumnType("int");

                    b.Property<string>("ConfirmationToken")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("RecoveryToken")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("UserAccountId");

                    b.ToTable("UserInternalLogins");
                });

            modelBuilder.Entity("Oishi.Data.Models.Advertisement", b =>
                {
                    b.HasOne("Oishi.Data.Models.MunicipalityOrCity", "MunicipalityOrCity")
                        .WithMany("Advertisements")
                        .HasForeignKey("MunicipalityOrCityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Oishi.Data.Models.Subcategory", "Subcategory")
                        .WithMany("Advertisements")
                        .HasForeignKey("SubcategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Oishi.Data.Models.UserAccount", "UserAccount")
                        .WithMany("Advertisements")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MunicipalityOrCity");

                    b.Navigation("Subcategory");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("Oishi.Data.Models.AdvertisementHighlight", b =>
                {
                    b.HasOne("Oishi.Data.Models.Advertisement", "Advertisement")
                        .WithMany("AdvertisementHighlights")
                        .HasForeignKey("AdvertisementId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Oishi.Data.Models.HighlightType", "HighlightType")
                        .WithMany("AdvertisementHighlights")
                        .HasForeignKey("HighLightTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Advertisement");

                    b.Navigation("HighlightType");
                });

            modelBuilder.Entity("Oishi.Data.Models.Favorite", b =>
                {
                    b.HasOne("Oishi.Data.Models.Advertisement", "Advertisement")
                        .WithMany("Favorites")
                        .HasForeignKey("AdvertisementId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Oishi.Data.Models.UserAccount", "UserAccount")
                        .WithMany("Favorites")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Advertisement");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("Oishi.Data.Models.Image", b =>
                {
                    b.HasOne("Oishi.Data.Models.Advertisement", "Advertisement")
                        .WithMany("Images")
                        .HasForeignKey("AdvertisementId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Advertisement");
                });

            modelBuilder.Entity("Oishi.Data.Models.Message", b =>
                {
                    b.HasOne("Oishi.Data.Models.Advertisement", "Advertisement")
                        .WithMany("Messages")
                        .HasForeignKey("AdvertisementId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Oishi.Data.Models.UserAccount", "ReceiverUserAccount")
                        .WithMany("ReceivedMessages")
                        .HasForeignKey("ReceiverUserAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Oishi.Data.Models.UserAccount", "SenderUserAccount")
                        .WithMany("SentMessages")
                        .HasForeignKey("SenderUserAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Advertisement");

                    b.Navigation("ReceiverUserAccount");

                    b.Navigation("SenderUserAccount");
                });

            modelBuilder.Entity("Oishi.Data.Models.MunicipalityOrCity", b =>
                {
                    b.HasOne("Oishi.Data.Models.Region", "Region")
                        .WithMany("MunicipalityOrCities")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("Oishi.Data.Models.Subcategory", b =>
                {
                    b.HasOne("Oishi.Data.Models.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Oishi.Data.Models.UserAccount", b =>
                {
                    b.HasOne("Oishi.Data.Models.Profile", "Profile")
                        .WithMany("UserAccounts")
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("Oishi.Data.Models.UserExternalLogin", b =>
                {
                    b.HasOne("Oishi.Data.Models.ExternalProvider", "ExternalProvider")
                        .WithMany("UserExternalLogins")
                        .HasForeignKey("ExternalProviderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Oishi.Data.Models.UserAccount", "UserAccount")
                        .WithMany("UserExternalLogins")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ExternalProvider");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("Oishi.Data.Models.UserInternalLogin", b =>
                {
                    b.HasOne("Oishi.Data.Models.UserAccount", "UserAccount")
                        .WithOne("UserInternalLogin")
                        .HasForeignKey("Oishi.Data.Models.UserInternalLogin", "UserAccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("Oishi.Data.Models.Advertisement", b =>
                {
                    b.Navigation("AdvertisementHighlights");

                    b.Navigation("Favorites");

                    b.Navigation("Images");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("Oishi.Data.Models.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("Oishi.Data.Models.ExternalProvider", b =>
                {
                    b.Navigation("UserExternalLogins");
                });

            modelBuilder.Entity("Oishi.Data.Models.HighlightType", b =>
                {
                    b.Navigation("AdvertisementHighlights");
                });

            modelBuilder.Entity("Oishi.Data.Models.MunicipalityOrCity", b =>
                {
                    b.Navigation("Advertisements");
                });

            modelBuilder.Entity("Oishi.Data.Models.Profile", b =>
                {
                    b.Navigation("UserAccounts");
                });

            modelBuilder.Entity("Oishi.Data.Models.Region", b =>
                {
                    b.Navigation("MunicipalityOrCities");
                });

            modelBuilder.Entity("Oishi.Data.Models.Subcategory", b =>
                {
                    b.Navigation("Advertisements");
                });

            modelBuilder.Entity("Oishi.Data.Models.UserAccount", b =>
                {
                    b.Navigation("Advertisements");

                    b.Navigation("Favorites");

                    b.Navigation("ReceivedMessages");

                    b.Navigation("SentMessages");

                    b.Navigation("UserExternalLogins");

                    b.Navigation("UserInternalLogin");
                });
#pragma warning restore 612, 618
        }
    }
}
